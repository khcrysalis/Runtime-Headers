@class AVAudioEngine, VFXNode, MTLRenderPassDescriptor, _TtC3VFX17VFXRendererLegacy, _TtC3VFX8VFXScene, NSObject, VFXMTLRenderContext, VFXRenderGraph, AVAudioEnvironmentNode, VFXWorld, NSString, VFXRecursiveLock, _TtC3VFX9VFXEffect, VFXAuthoringEnvironment, NSArray, NSColor;
@protocol MTLTexture, VFXWorldRenderer, MTLRenderCommandEncoder, VFXWorldRendererDelegate, _VFXWorldCommandBufferStatusMonitor, OS_dispatch_queue, MTLDevice, _VFXWorldRendererResourceManagerMonitor, MTLCommandQueue;

@interface VFXRenderer : NSObject <VFXMTLRenderContextCommandBufferStatusMonitor, VFXMTLRenderContextResourceManagerMonitor, VFXWorldRenderer> {
    VFXWorld *_world;
    VFXNode *_pointOfView;
    VFXNode *_pointOfCulling;
    VFXRecursiveLock *_lock;
    NSObject<OS_dispatch_queue> *__renderingQueue;
    unsigned long long __antialiasingMode;
    unsigned long long _pixelFormat;
    struct { struct __CFXFramebuffer *frameBuffer; struct __CFXFramebuffer *multisamplingFrameBuffer; struct CGSize { double width; double height; } drawableSize; } _framebufferInfo;
    id<MTLTexture> _offScreenFramebuffer;
    NSArray *_viewpoints;
    unsigned long long _viewpointCoordinateSpace;
    BOOL _pointOfViewWasSet;
    unsigned char _shouldDeleteFramebuffer : 1;
    unsigned char _didUpdateBackingSize : 1;
    unsigned char _rendersContinuously : 1;
    unsigned char _isPrivateRenderer : 1;
    unsigned char _isViewPrivateRenderer : 1;
    unsigned char _renderingSnapshot : 1;
    unsigned char _contextIsDoubleBuffered : 1;
    double _time;
    double _deltaTime;
    double _lastWorldTime;
    double _nextFrameTime;
    BOOL _isAnimating;
    unsigned int _adaptativeState0;
    unsigned int _adaptativeEndFrame;
    id _delegate;
    struct __CFXEngineContext { } *_engineContext;
    void /* unknown type, empty encoding */ __viewport;
    float __aspectRatio;
    void /* unknown type, empty encoding */ __drawableSafeAreaInsets;
    VFXMTLRenderContext *_renderContext;
    unsigned char _additiveWritesToAlpha : 1;
    unsigned char _jitteringEnabled : 1;
    unsigned char _temporalAntialiasingEnabled : 1;
    unsigned char _frozen : 1;
    unsigned char _imguiFrameStarted : 1;
    unsigned char _shouldForwardWorldRendererDelegationMessagesToSelf : 1;
    unsigned char _shouldForwardWorldRendererDelegationMessagesToPrivateRendererOwner : 1;
    struct { unsigned char supportsUpdate : 1; unsigned char supportsDidApplyAnimations : 1; unsigned char supportsDidSimulatePhysics : 1; unsigned char supportsDidApplyConstraints : 1; unsigned char supportsWillRender : 1; unsigned char supportsDidRender : 1; unsigned char supportsInputTime : 1; unsigned char supportsReadSubdivCache : 1; unsigned char supportsWriteSubdivCache : 1; unsigned char supportsMainPassCustomPostProcess : 1; } _selfDelegationConformance;
    struct { unsigned char supportsUpdate : 1; unsigned char supportsDidApplyAnimations : 1; unsigned char supportsDidSimulatePhysics : 1; unsigned char supportsDidApplyConstraints : 1; unsigned char supportsWillRender : 1; unsigned char supportsDidRender : 1; unsigned char supportsInputTime : 1; unsigned char supportsReadSubdivCache : 1; unsigned char supportsWriteSubdivCache : 1; unsigned char supportsMainPassCustomPostProcess : 1; } _privateRendererOwnerDelegationConformance;
    struct { unsigned char supportsUpdate : 1; unsigned char supportsDidApplyAnimations : 1; unsigned char supportsDidSimulatePhysics : 1; unsigned char supportsDidApplyConstraints : 1; unsigned char supportsWillRender : 1; unsigned char supportsDidRender : 1; unsigned char supportsInputTime : 1; unsigned char supportsReadSubdivCache : 1; unsigned char supportsWriteSubdivCache : 1; unsigned char supportsMainPassCustomPostProcess : 1; } _delegationConformance;
    NSColor *_backgroundColor;
    struct CFXColor4 { union { float rgba[4]; struct { float r; float g; float b; float a; } ; void /* unknown type, empty encoding */ simd; } ; } _cfxBackgroundColor;
    VFXRenderer *_preloadRenderer;
    id<VFXWorldRenderer> _privateRendererOwner;
    VFXRenderer *_snapshotRenderer;
    _TtC3VFX17VFXRendererLegacy *_legacyRenderer;
    float _contentScaleFactor;
    BOOL _isRunningInExtension;
    VFXAuthoringEnvironment *_authoringEnvironment;
    unsigned long long _debugOptions;
    unsigned long long _debugUIOptions;
    BOOL _showStatistics;
    BOOL _showAuthoringEnvironment;
    BOOL _cameraIsManipulated;
    double _statisticsTimeStamp;
    id<_VFXWorldRendererResourceManagerMonitor> _resourceManagerMonitor;
    id<_VFXWorldCommandBufferStatusMonitor> _commandBufferStatusMonitor;
    BOOL _customRenderGraphEnabled;
    VFXRenderGraph *_renderGraph;
    unsigned long long _renderMode;
    unsigned long long _rendererKind;
    BOOL _emulateStereo;
}

@property (retain, nonatomic) _TtC3VFX8VFXScene *scene;
@property (retain, nonatomic) _TtC3VFX9VFXEffect *effect;
@property (retain, nonatomic) id<MTLTexture> texture;
@property (retain, nonatomic) id<MTLTexture> depthTexture;
@property (nonatomic) BOOL enableDeferredRendering;
@property (copy, nonatomic) NSColor *backgroundColor;
@property (copy, nonatomic) id /* block */ postRenderCallback;
@property (retain, nonatomic) VFXWorld *world;
@property (readonly, nonatomic) double nextFrameTime;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<VFXWorldRendererDelegate> delegate;
@property (retain, nonatomic) VFXNode *pointOfView;
@property (nonatomic) BOOL autoenablesDefaultLighting;
@property (nonatomic) unsigned long long antialiasingMode;
@property (nonatomic, getter=isJitteringEnabled) BOOL jitteringEnabled;
@property (nonatomic, getter=isTemporalAntialiasingEnabled) BOOL temporalAntialiasingEnabled;
@property (nonatomic) BOOL additiveWritesToAlpha;
@property (nonatomic) BOOL showsStatistics;
@property (nonatomic) unsigned long long debugOptions;
@property (readonly, nonatomic) id<MTLRenderCommandEncoder> currentRenderCommandEncoder;
@property (readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property (readonly, nonatomic) id<MTLDevice> device;
@property (readonly, nonatomic) unsigned long long colorPixelFormat;
@property (readonly, nonatomic) unsigned long long depthPixelFormat;
@property (readonly, nonatomic) unsigned long long stencilPixelFormat;
@property (readonly, nonatomic) id<MTLCommandQueue> commandQueue;
@property (readonly, nonatomic) AVAudioEngine *audioEngine;
@property (readonly, nonatomic) AVAudioEnvironmentNode *audioEnvironmentNode;
@property (retain, nonatomic) VFXNode *audioListener;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } currentViewport;
@property (readonly, nonatomic) struct CGColorSpace { } *workingColorSpace;
@property (retain, nonatomic) VFXRenderGraph *renderGraph;

+ (id)rendererWithDevice:(id)a0 options:(id)a1;

- (void)dealloc;
- (id)init;
- (void).cxx_destruct;
- (void)lock;
- (void)unlock;
- (void)setPixelFormat:(unsigned long long)a0;
- (unsigned long long)pixelFormat;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })viewport;
- (id)snapshot;
- (void)_endFrame;
- (struct { void /* unknown type, empty encoding */ x0[4]; })_screenTransform;
- (id)metalDevice;
- (BOOL)frozen;
- (void)render;
- (unsigned long long)renderMode;
- (void)setFrozen:(BOOL)a0;
- (void)setRenderMode:(unsigned long long)a0;
- (float)_aspectRatio;
- (struct CGImage { } *)createSnapshot:(id *)a0;
- (id)currentCommandBuffer;
- (id)_renderingQueue;
- (id)initWithCommandQueue:(id)a0;
- (id)hitTest:(struct CGPoint { double x0; double x1; })a0 options:(id)a1;
- (id)metalLayer;
- (void *)__CFObject;
- (BOOL)autoAdjustCamera;
- (BOOL)jitteringEnabled;
- (void)setAutoAdjustCamera:(BOOL)a0;
- (void)_addGPUFramePresentedHandler:(id /* block */)a0;
- (void)_allowGPUBackgroundExecution;
- (void /* unknown type, empty encoding */)unprojectPoint:(SEL)a0;
- (id)MTLTexture;
- (BOOL)prepareObject:(id)a0 shouldAbortBlock:(id /* block */)a1;
- (void)_addGPUFrameCompletedHandler:(id /* block */)a0;
- (void)_addGPUFrameScheduledHandler:(id /* block */)a0;
- (void)setForceAsyncShaderCompilation:(BOOL)a0;
- (id)_authoringEnvironment;
- (void)set_commandBufferStatusMonitor:(id)a0;
- (struct CGSize { double x0; double x1; })_backingSize;
- (void)_beginFrame;
- (void)_clearBackBuffer;
- (BOOL)_collectCompilationErrors;
- (id)_commandBufferStatusMonitor;
- (id)_compilationErrors;
- (double)_computeNextFrameTime;
- (id)_computedLightingEnvironmentMapsPath;
- (float)_contentsScaleFactor;
- (id)_copyPerformanceStatistics;
- (struct CGImage { } *)_createBackgroundColorImageWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)_createOffscreenFramebufferIfNeeded;
- (void)_displayLinkStatsTack;
- (void)_displayLinkStatsTick;
- (void /* unknown type, empty encoding */)_drawableSafeAreaInsets;
- (struct __CFXEngineContext { } *)_engineContext;
- (id)_hitTest:(struct CGPoint { double x0; double x1; })a0 viewport:(struct CGSize { double x0; double x1; })a1 options:(id)a2;
- (void)_installViewport;
- (void)_invalidateFramebuffer;
- (BOOL)_isNodeInsideFrustum:(SEL)a0 withPointOfView:(id)a1 viewport:(id)a2;
- (void)_jitterAtStep:(unsigned long long)a0 updateMainFramebuffer:(BOOL)a1 redisplay:(BOOL)a2 jitterer:(id)a3;
- (BOOL)_needsRedrawAsap;
- (BOOL)_needsRepetitiveRedraw;
- (id)_nodesInsideFrustumWithPointOfView:(SEL)a0 viewport:(id)a1;
- (void)_prepareRenderTarget;
- (void)_presentFramebuffer;
- (void /* unknown type, empty encoding */)_projectPoint:(id)a0 viewport:(SEL)a1;
- (void)_projectPoints:(SEL)a0 count:(void *)a1 viewport:(unsigned long long)a2;
- (id)_readSubdivCacheForHash:(id)a0;
- (id)_renderContextMetal;
- (id)_resourceManagerMonitor;
- (void)_runningInExtension;
- (void)_setBackingSize:(struct CGSize { double x0; double x1; })a0;
- (void)_setContentsScaleFactor:(float)a0;
- (void)_setupOffscreenRendererWithSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)_showsAuthoringEnvironment;
- (float)_superSamplingFactor;
- (void /* unknown type, empty encoding */)_unprojectPoint:(id)a0 viewport:(SEL)a1;
- (void)_updateEngineCallbacks;
- (void /* unknown type, empty encoding */)_viewport;
- (void)_writeSubdivCacheForHash:(id)a0 dataProvider:(id /* block */)a1;
- (BOOL)forceAsyncShaderCompilation;
- (id)hitTestWithSegmentFromPoint:(id)a0 toPoint:(SEL)a1 options:(id)a2;
- (BOOL)isNodeInsideFrustum:(id)a0 withPointOfView:(id)a1;
- (BOOL)isVertexAmplificationEnabled;
- (id)nodesInsideFrustumWithPointOfView:(id)a0;
- (id)pointOfCulling;
- (void)prepareObjects:(id)a0 withCompletionHandler:(id /* block */)a1;
- (id)privateRendererOwner;
- (id)programWithNode:(id)a0 withMaterial:(id)a1;
- (void /* unknown type, empty encoding */)projectPoint:(SEL)a0;
- (void)renderContext:(id)a0 commandBufferDidCompleteWithError:(id)a1;
- (void)renderContext:(id)a0 didFallbackToDefaultTextureForSource:(id)a1 message:(id)a2;
- (BOOL)renderMovieToURL:(id)a0 size:(struct CGSize { double x0; double x1; })a1 antialiasingMode:(unsigned long long)a2 attributes:(id)a3 error:(id *)a4;
- (void)renderWithViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 commandBuffer:(id)a1 passDescriptor:(id)a2;
- (void)resolvedBackgroundColorDidChange:(struct CGColor { } *)a0;
- (void)setPointOfCulling:(id)a0;
- (void)setRendersContinuously:(BOOL)a0;
- (void)setVertexAmplificationEnabled:(BOOL)a0;
- (void)set_aspectRatio:(float)a0;
- (void)set_collectCompilationErrors:(BOOL)a0;
- (void)set_computedLightingEnvironmentMapsPath:(id)a0;
- (void)set_drawableSafeAreaInsets:(SEL)a0;
- (void)set_resourceManagerMonitor:(id)a0;
- (void)set_screenTransform:(struct { void /* unknown type, empty encoding */ x0[4]; })a0;
- (void)set_superSamplingFactor:(float)a0;
- (void)set_viewport:(SEL)a0;
- (void)setupAuthoringEnvironment;
- (id)snapshotRendererWithSize:(struct CGSize { double x0; double x1; })a0;
- (BOOL)temporalAntialiasingEnabled;
- (void)updateAtTime:(double)a0;
- (BOOL)vertexAmplificationEnabled;
- (id)snapshotWithSize:(struct CGSize { double x0; double x1; })a0;
- (void)_render;
- (void)encodeWithCommandBuffer:(id)a0;
- (void)finalizeEncoding;
- (id)_legacyRenderer;
- (void)_worldDidChange;
- (void)_cfxBackgroundColorDidChange;
- (struct CGImage { } *)_createSnapshotWithSize:(struct CGSize { double x0; double x1; })a0 error:(id *)a1;
- (id)_defaultPOVForWorld:(id)a0;
- (void)_didRenderWorld:(id)a0;
- (void)_endImGuiFrameAndRender;
- (id)_initWithDevice:(id)a0 options:(id)a1 isPrivateRenderer:(BOOL)a2 privateRendererOwner:(id)a3 clearsOnDraw:(BOOL)a4;
- (BOOL)_legacyAdditiveWritesToAlpha;
- (void)_renderWithViewport:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 encoder:(id)a1 passDescriptor:(id)a2 commandQueue:(id)a3 commandBuffer:(id)a4;
- (void)_renderWorldWithEngineContext:(struct __CFXEngineContext { } *)a0;
- (void)_setLegacyAdditiveWritesToAlpha:(BOOL)a0;
- (BOOL)_shouldForwardWorldRendererDelegationMessagesToPrivateRendererOwner;
- (BOOL)_triggersEnabled;
- (void)_updateProbes:(id)a0 progress:(id)a1 completionHandler:(id /* block */)a2;
- (BOOL)_viewportDidChange;
- (BOOL)_wantsWorldRendererDelegationMessages;
- (void)_willRenderWorld:(id)a0;
- (BOOL)canRecycleParticleBuffers;
- (unsigned long long)debugUIOptions;
- (void)drawStatisticsIfNeeded;
- (BOOL)hasImGuiFrameStarted;
- (BOOL)hasRenderableObjects;
- (BOOL)isEmulatingStereo;
- (id)legacyRenderer;
- (void)renderToTexture:(id)a0;
- (void)renderToTexture:(id)a0 options:(id)a1;
- (void)renderWithCommandBuffer:(id)a0 viewPoints:(id)a1 mode:(unsigned long long)a2;
- (void)renderWithTextureAttachmentProvider:(id)a0 options:(id)a1;
- (unsigned long long)rendererKind;
- (void)setCanRecycleParticleBuffers:(BOOL)a0;
- (void)setDebugUIOptions:(unsigned long long)a0;
- (void)setEmulateStereo:(BOOL)a0;
- (void)setRendererKind:(unsigned long long)a0;
- (void)setShouldLoadFinalTexture:(BOOL)a0;
- (void)setWorld:(id)a0 completionHandler:(id /* block */)a1;
- (void)set_legacyRenderer:(id)a0;
- (void)set_shouldForwardWorldRendererDelegationMessagesToPrivateRendererOwner:(BOOL)a0;
- (void)set_triggersEnabled:(BOOL)a0;
- (void)set_wantsWorldRendererDelegationMessages:(BOOL)a0;
- (id)setupLegacyRendererWithCommandQueue:(id)a0;
- (BOOL)shouldLoadFinalTexture;
- (BOOL)showsDebugUI;
- (id)snapshotImageWithSize:(struct CGSize { double x0; double x1; })a0;
- (id)snapshotImageWithSize:(struct CGSize { double x0; double x1; })a0 deltaTime:(double)a1;
- (id)snapshotWithSize:(struct CGSize { double x0; double x1; })a0 deltaTime:(double)a1;
- (void)startManipulatingPointOfView;
- (void)stopManipulatingPointOfView;
- (void)updateProbes:(id)a0 atTime:(double)a1 completionHandler:(id /* block */)a2;

@end
