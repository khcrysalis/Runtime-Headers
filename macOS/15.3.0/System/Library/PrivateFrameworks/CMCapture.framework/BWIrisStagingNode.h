@class BWLimitedGMErrorLogger, NSString, FigIrisAutoTrimmer, BWIntermediateJPEGCompressor, NSURL, NSDictionary, BWStats, BWIrisSequenceAdjuster, BWMotionDataTimeMachine, NSMutableArray, BWMotionDataPreserver, NSObject;
@protocol OS_dispatch_group, BWIrisStagingNodeIrisRequestDelegate;

@interface BWIrisStagingNode : BWNode {
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _bufferingTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _targetFrameDuration;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _beginIrisMovieCaptureTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _endIrisMovieCaptureTime;
    BOOL _stagingSuspended;
    BOOL _flushAndSuspendPending;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _stagingResumedTime;
    BOOL _compressSynchronizedSlaveAttachedMedia;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _frameGovernorNextFrameThreshold;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _frameGovernorReferenceTime;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _readyToEmitPTS;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastProcessedVideoPTS;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _masterMovieStartPTS;
    NSURL *_temporaryMovieDirectoryURL;
    NSURL *_masterMovieURL;
    NSURL *_spatialOverCaptureMasterMovieURL;
    NSMutableArray *_stagingQueues;
    NSMutableArray *_lastEmittedBuffers;
    NSMutableArray *_droppedFramePTSs;
    BOOL _valveOpen;
    BOOL _finishingAllEnqueuedRequests;
    BOOL _valveDraining;
    BOOL _emittedFirstAudio;
    BOOL _valveOpenForMomentCaptureMovieRecording;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _valveDiscontinuitySearchLimit;
    long long _valveOpenerSettingsID;
    NSMutableArray *_irisRequestsInFlight;
    NSMutableArray *_irisRequestsSoonToBeEmitted;
    int _emittedIrisRequestCount;
    struct OpaqueFigSimpleMutex { } *_stateMutex;
    struct { long long x0; int x1; unsigned int x2; long long x3; } *_firstEmittedPTSArray;
    struct OpaqueCMClock { } *_masterClock;
    int _trimMethod;
    BOOL _vitalityScoringEnabled;
    struct { unsigned short major; unsigned short minor; unsigned short patch; } _vitalityScoringSmartCameraPipelineVersion;
    FigIrisAutoTrimmer *_trimmer;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _firstTrimStartPTS;
    BOOL _trimLivePhotoMovieAtWideAndSuperWideAutoSwitching;
    unsigned long long _inferencesInputIndex;
    BWMotionDataPreserver *_motionDataPreserver;
    BWIrisSequenceAdjuster *_sequenceAdjusterBackingStore;
    BWIrisSequenceAdjuster *_sequenceAdjuster;
    BWMotionDataTimeMachine *_motionDataTimeMachine;
    int _visMotionMetadataPreloadingMode;
    int _numEODMessagesReceived;
    id<BWIrisStagingNodeIrisRequestDelegate> _delegate;
    unsigned long long _compressedBufferPoolAllocationTimeoutMS;
    float _intermediateJPEGCompressionQuality;
    float _intermediateJPEGCompressionRate;
    int _intermediateJPEGDownstreamRetainedBufferCount;
    int _intermediateJPEGSurfaceLocalRetainedBufferCount;
    int _additionalCompressedBufferCount;
    BWIntermediateJPEGCompressor *_intermediateJPEGCompressor;
    BWIntermediateJPEGCompressor *_synchronizedSlaveJPEGCompressor;
    BOOL _doingJPEGCompression;
    NSDictionary *_cameraInfoByPortType;
    unsigned long long *_emissionMap;
    BOOL _haveSeenFirstAudioSampleBuffer;
    BOOL _haveSeenFirstVideoSampleBuffer;
    BOOL _readyToReceiveRequests;
    NSObject<OS_dispatch_group> *_readyToReceiveRequestsGroup;
    float _videoStabilizationOverscanOverride;
    BOOL _captureDeviceHasOverCaptureEnabled;
    float _spatialOverCapturePercentageToApply;
    NSString *_recommendedMasterPortType;
    int _lastRecommendedMasterSelectionReason;
    struct { long long value; int timescale; unsigned int flags; long long epoch; } _lastReceivedVideoTime;
    BWStats *_overallVideoFrameReceptionStats;
    BWStats *_valveActiveVideoFrameReceptionStats;
    BWLimitedGMErrorLogger *_limitedGMErrorLogger;
    BOOL _applyPreviewShift;
    BOOL _reachedEndOfData;
    BOOL _smartStyleRenderingEnabled;
    BOOL _smartStyleReversibilityEnabled;
}

@property (readonly) NSURL *temporaryMovieDirectoryURL;
@property (readonly) BWMotionDataTimeMachine *motionDataTimeMachine;
@property struct { long long x0; int x1; unsigned int x2; long long x3; } beginIrisMovieCaptureTime;
@property struct { long long x0; int x1; unsigned int x2; long long x3; } endIrisMovieCaptureTime;

+ (void)initialize;

- (void)dealloc;
- (void)setMasterClock:(struct OpaqueCMClock { } *)a0;
- (struct OpaqueCMClock { } *)masterClock;
- (unsigned long long)_indexOfBufferBeforeOrEqualToPTS:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 inputIndex:(unsigned long long)a1 applyFrameDropsMitigation:(BOOL)a2;
- (BOOL)applyPreviewShift;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })bufferingTime;
- (void)closeValve;
- (void)configurationWithID:(long long)a0 updatedFormat:(id)a1 didBecomeLiveForInput:(id)a2;
- (void)didReachEndOfDataForInput:(id)a0;
- (void)didSelectFormat:(id)a0 forInput:(id)a1 forAttachedMediaKey:(id)a2;
- (int)enqueueIrisRequest:(id)a0;
- (void)handleDroppedSample:(id)a0 forInput:(id)a1;
- (void)handleNodeError:(id)a0 forInput:(id)a1;
- (id)initWithNumberOfVideoInputs:(unsigned long long)a0 numberOfAudioInputs:(unsigned long long)a1 numberOfMetadataInputs:(unsigned long long)a2 autoTrimMethod:(int)a3 vitalityScoringEnabled:(BOOL)a4 captureDeviceHasOverCaptureEnabled:(BOOL)a5 overCaptureEnabled:(BOOL)a6 depthEnabled:(BOOL)a7 videoStabilizationOverscanOverride:(float)a8 sequenceAdjusterEnabled:(BOOL)a9 visMotionMetadataPreloadingMode:(int)a10 frameReconstructionEnabled:(BOOL)a11 subjectRelightingEnabled:(BOOL)a12 intermediateJPEGCompressionQuality:(float)a13 intermediateJPEGCompressionRate:(float)a14 maxLossyCompressionLevel:(int)a15 temporaryMovieDirectoryURL:(id)a16 cameraInfoByPortType:(id)a17 smartStyleRenderingEnabled:(BOOL)a18 smartStyleReversibilityEnabled:(BOOL)a19 irisRequestDelegate:(id)a20;
- (int)intermediateJPEGDownstreamRetainedBufferCount;
- (int)openValveWithIrisRequest:(id)a0;
- (void)prepareForCurrentConfigurationToBecomeLive;
- (void)prepareToFinishAllEnqueuedIrisRequestsWithEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)renderSampleBuffer:(struct opaqueCMSampleBuffer { } *)a0 forInput:(id)a1;
- (void)setApplyPreviewShift:(BOOL)a0;
- (void)setBufferingTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)setIntermediateJPEGDownstreamRetainedBufferCount:(int)a0;
- (void)setMomentCaptureMovieRecordingMasterEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0 forRequestWithSettingsID:(long long)a1;
- (void)setStagingQueues:(id)a0;
- (void)setTargetFrameDuration:(struct { long long x0; int x1; unsigned int x2; long long x3; })a0;
- (void)setVitalityScoringSmartCameraPipelineVersion:(struct { unsigned short x0; unsigned short x1; unsigned short x2; })a0;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })targetFrameDuration;
- (BOOL)valveIsOpen;
- (struct { unsigned short x0; unsigned short x1; unsigned short x2; })vitalityScoringSmartCameraPipelineVersion;
- (BOOL)waitUntilReadyToReceiveRequestsWithTimeout:(float)a0;

@end
