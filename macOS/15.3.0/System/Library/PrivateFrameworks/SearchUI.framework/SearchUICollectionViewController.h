@class NSMutableDictionary, SearchUIPassthroughScrollView, SFColor, SearchUICollectionViewAttributes, SearchUICommandHandler, NSOrderedSet, NSSearchField, NSString, SearchUICollectionView, SearchUICollectionViewDataSource, NSViewController, NSCollectionView, SearchUICommandEnvironment, NSIndexPath;
@protocol SearchUICommandDelegate, SearchUIFeedbackDelegate, SearchUIScrollable, SearchUICardViewDelegate;

@interface SearchUICollectionViewController : NSViewController <SearchUICollectionViewSizingDelegate, NSCollectionViewDelegate, QLPreviewPanelDelegate, QLPreviewPanelDataSource, SearchUIFeedbackDelegateInternal, NSScrollViewDelegate, SearchUIViewTesting>

@property (retain) SearchUICollectionView *searchUICollectionView;
@property (retain, nonatomic) SearchUICollectionViewDataSource *dataSource;
@property (retain, nonatomic) SearchUICommandHandler *quickLookedHandler;
@property (retain, nonatomic) NSViewController *quickLookedViewController;
@property (nonatomic) unsigned long long lastVisibleFeedbackTrigger;
@property double lastScrollLocation;
@property unsigned long long queryId;
@property (retain, nonatomic) NSMutableDictionary *potentiallyVisibleCells;
@property (retain, nonatomic) NSOrderedSet *latestVisibleResultsAccountedForInFeedback;
@property (retain, nonatomic) NSOrderedSet *latestVisibleCardSectionsAccountedForInFeedback;
@property (readonly, nonatomic) SearchUICollectionViewAttributes *searchUIAttributes;
@property (readonly, nonatomic) SearchUICommandEnvironment *commandEnvironment;
@property (weak, nonatomic) id<SearchUICommandDelegate> commandDelegate;
@property (weak, nonatomic) id<SearchUIFeedbackDelegate> feedbackListener;
@property (weak, nonatomic) id<SearchUICardViewDelegate> cardViewDelegate;
@property (nonatomic) BOOL dragInteractionEnabled;
@property (retain) NSCollectionView<SearchUIScrollable> *collectionView;
@property (weak, nonatomic) NSSearchField *searchField;
@property (retain) SearchUIPassthroughScrollView *view;
@property (readonly) NSIndexPath *selectedIndexPath;
@property (nonatomic) BOOL singleClickExecutesCommands;
@property (retain, nonatomic) SFColor *searchUIBackgroundColor;
@property (nonatomic) BOOL selectionShouldFillWidth;
@property (nonatomic) BOOL disableEmphasizedSelection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (setter=_setWantsPageAlignedHorizontalAxis:) BOOL _wantsPageAlignedHorizontalAxis;
@property (setter=_setWantsPageAlignedVerticalAxis:) BOOL _wantsPageAlignedVerticalAxis;
@property (copy, nonatomic) id /* block */ viewWillUpdateHandler;
@property (copy, nonatomic) id /* block */ viewDidUpdateHandler;

+ (id)existingSharedPreviewPanel;

- (id)forwardingTargetForSelector:(SEL)a0;
- (BOOL)respondsToSelector:(SEL)a0;
- (void).cxx_destruct;
- (id)initWithNibName:(id)a0 bundle:(id)a1;
- (void)collectionView:(id)a0 willDisplayItem:(id)a1 forRepresentedObjectAtIndexPath:(id)a2;
- (BOOL)acceptsPreviewPanelControl:(id)a0;
- (void)beginPreviewPanelControl:(id)a0;
- (BOOL)collectionView:(id)a0 canDragItemsAtIndexPaths:(id)a1 withEvent:(id)a2;
- (void)collectionView:(id)a0 didDeselectItemsAtIndexPaths:(id)a1;
- (void)collectionView:(id)a0 didEndDisplayingItem:(id)a1 forRepresentedObjectAtIndexPath:(id)a2;
- (void)collectionView:(id)a0 didSelectItemsAtIndexPaths:(id)a1;
- (id)collectionView:(id)a0 pasteboardWriterForItemAtIndexPath:(id)a1;
- (id)collectionView:(id)a0 shouldSelectItemsAtIndexPaths:(id)a1;
- (void)copy:(id)a0;
- (void)didScrollInScrollView:(id)a0;
- (void)endPreviewPanelControl:(id)a0;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)a0;
- (long long)numberOfSections;
- (BOOL)previewPanel:(id)a0 handleEvent:(id)a1;
- (id)previewPanel:(id)a0 previewItemAtIndex:(long long)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })previewPanel:(id)a0 sourceFrameOnScreenForPreviewItem:(id)a1;
- (id)previewPanel:(id)a0 transitionImageForPreviewItem:(id)a1 contentRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)a2;
- (void)viewDidAppear;
- (void)viewDidLayout;
- (void)viewWillDisappear;
- (BOOL)hasCustomViewControllerForResult:(id)a0;
- (void)contentSizeDidChange:(struct CGSize { double x0; double x1; })a0;
- (id)commandEnvironmentForIndexPath:(id)a0;
- (BOOL)firstSelectableResultIsSelected;
- (id)selectNextResultDown:(BOOL)a0 bySection:(BOOL)a1;
- (void)tapAtIndexPath:(id)a0;
- (id)_firstSelectableResult;
- (BOOL)acceptSelectedSuggestion;
- (void)animateAndScrollButton:(id)a0 direction:(long long)a1;
- (void)boundsDidChangeNotificationHandler:(id)a0;
- (BOOL)canSelectPath:(id)a0;
- (id)cellForRowModel:(id)a0 atIndexPath:(id)a1;
- (BOOL)collectionSectionShouldBeExpanded:(id)a0;
- (void)copySelectedItem;
- (id)currentSnapshotLayoutConfiguration;
- (void)didSelectItemAtIndexPath:(id)a0;
- (BOOL)doesIndexPathExist:(id)a0;
- (BOOL)executeCommandForSelectedIndexPathWithTriggerEvent:(unsigned long long)a0;
- (id)firstExecutableIndexPathForResult:(id)a0;
- (id)firstSelectablePathAtPath:(id)a0 down:(BOOL)a1 includeInitialPath:(BOOL)a2 bySection:(BOOL)a3;
- (BOOL)forwardFeedbackForSelector:(SEL)a0;
- (void)frameDidChangeNotificationHandler:(id)a0;
- (BOOL)hasPreviewForIndexPath:(id)a0;
- (void)iterateIndexPaths:(id /* block */)a0;
- (void)leadingButtonTapped:(id)a0;
- (id)menuForItemAtIndexPath:(id)a0;
- (id)nextPathFromPath:(id)a0 down:(BOOL)a1;
- (void)performRecapScrollTestWithTestName:(id)a0 completion:(id /* block */)a1;
- (struct CGSize { double x0; double x1; })preferredScrollViewContentSize;
- (id)previewHandlerForIndexPath:(id)a0;
- (id)previewHandlerForSelectedRowModel;
- (id)previewPanel:(id)a0 customViewForPreviewItem:(id)a1;
- (BOOL)previewPanel:(id)a0 shouldEnableFullscreenForItem:(id)a1;
- (void)previewPanel:(id)a0 willLoadPreviewItem:(id)a1;
- (BOOL)quickLookSelectedItem;
- (id)quickLookZoomTransitionSourceViewForCurrentlySelectedItem;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollToIndexPath:(id)a0;
- (id)searchUICommandEnvironment;
- (void)selectFirstResult;
- (BOOL)selectIndexPath:(id)a0 scrollToVisible:(BOOL)a1;
- (BOOL)selectResult:(id)a0 execute:(BOOL)a1;
- (BOOL)selectionNeedsHorizontalNavigation;
- (void)sendVisibleFeedbackIfNeeded;
- (void)setSectionBackgroundHighlighted:(BOOL)a0 indexPath:(id)a1;
- (void)trailingButtonTapped:(id)a0;
- (void)updateScrollButton:(id)a0 direction:(long long)a1;
- (void)updateSupplementaryButtonViews;
- (void)updateWithSnapshot:(id)a0 queryId:(unsigned long long)a1 animated:(BOOL)a2 completion:(id /* block */)a3;

@end
