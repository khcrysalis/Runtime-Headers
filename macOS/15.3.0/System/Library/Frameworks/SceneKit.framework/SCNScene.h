@class SCNPhysicsWorld, NSString, SCNMaterialProperty, SCNNode, NSURL, NSMutableDictionary, SCNAuthoringEnvironment, SCNSceneSource;

@interface SCNScene : NSObject <SCNTransactionCommandObject, NSSecureCoding> {
    struct __C3DScene { } *_scene;
    SCNSceneSource *_sceneSource;
    SCNPhysicsWorld *_physicsWorld;
    SCNNode *_rootNode;
    SCNNode *_layerRootNode[4];
    SCNMaterialProperty *_background;
    SCNMaterialProperty *_environment;
    NSMutableDictionary *_userAttributes;
    double _fogStartDistance;
    double _fogEndDistance;
    double _fogDensityExponent;
    id _fogColor;
    BOOL _wantsScreenSpaceReflection;
    long long _screenSpaceReflectionSampleCount;
    double _screenSpaceReflectionMaxRayDistance;
    double _screenSpaceReflectionStride;
    BOOL _paused;
    NSURL *_sourceURL;
    BOOL _pausedForEditing;
    BOOL _allowsDefaultLightingEnvironmentFallback;
    SCNAuthoringEnvironment *_authoringEnvironment;
}

@property (class, readonly) BOOL supportsSecureCoding;

@property (readonly, nonatomic) SCNNode *rootNode;
@property (readonly, nonatomic) SCNPhysicsWorld *physicsWorld;
@property (readonly, nonatomic) SCNMaterialProperty *background;
@property (readonly, nonatomic) SCNMaterialProperty *lightingEnvironment;
@property (nonatomic) double fogStartDistance;
@property (nonatomic) double fogEndDistance;
@property (nonatomic) double fogDensityExponent;
@property (retain, nonatomic) id fogColor;
@property (nonatomic) BOOL wantsScreenSpaceReflection;
@property (nonatomic) long long screenSpaceReflectionSampleCount;
@property (nonatomic) double screenSpaceReflectionMaximumDistance;
@property (nonatomic) double screenSpaceReflectionStride;
@property (nonatomic, getter=isPaused) BOOL paused;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (id)avt_newSceneWithURL:(id)a0 options:(id)a1 error:(id *)a2;
+ (id)avt_nodeNamed:(id)a0 forSceneAtURL:(id)a1 options:(id)a2 error:(id *)a3;
+ (id)avt_rootNodeForSceneAtURL:(id)a0 options:(id)a1 error:(id *)a2;
+ (id)avt_rootObjectForSceneAtURL:(id)a0 options:(id)a1 error:(id *)a2;
+ (id)scene;
+ (SEL)jsConstructor;
+ (id)sceneWithData:(id)a0 atIndex:(long long)a1 options:(id)a2;
+ (id)sceneWithData:(id)a0 options:(id)a1;
+ (id)sceneWithSceneRef:(struct __C3DScene { } *)a0;
+ (id)sceneWithURL:(id)a0 atIndex:(long long)a1 options:(id)a2;
+ (id)sceneWithURL:(id)a0 options:(id)a1;
+ (id)sceneWithURL:(id)a0 options:(id)a1 error:(id *)a2;
+ (id)sceneNamed:(id)a0 inDirectory:(id)a1 options:(id)a2;
+ (id)_indexPathForNode:(id)a0;
+ (BOOL)canImportFileExtension:(id)a0;
+ (BOOL)canImportFileUTI:(id)a0;
+ (id)sceneNamed:(id)a0;
+ (id)sceneNamed:(id)a0 options:(id)a1;
+ (id)sceneWithMDLAsset:(id)a0;
+ (id)sceneWithMDLAsset:(id)a0 options:(id)a1;
+ (id)supportedFileUTIsForExport;
+ (id)supportedFileUTIsForImport;

- (BOOL)avt_writeByArchivingRootNodeInsteadOfScene:(BOOL)a0 toURL:(id)a1 options:(id)a2 error:(id *)a3;
- (void)avt_fixQuirksOfNewUSDSchemaWithOptions:(unsigned long long)a0 handler:(id /* block */)a1;
- (id)avt_init;
- (void)avt_removeDuplicateSkeletonRootWithHandler:(id /* block */)a0;
- (void)avt_removeFaceSetsExportedAsDummyNodesWithHandler:(id /* block */)a0;
- (void)avt_setInitialValuesExportedAsAnimationsWithWithOptions:(unsigned long long)a0 handler:(id /* block */)a1;
- (void)dealloc;
- (id)init;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)lock;
- (void)unlock;
- (id)valueForUndefinedKey:(id)a0;
- (void)setStartTime:(double)a0;
- (double)startTime;
- (id)root;
- (void)setValue:(id)a0 forUndefinedKey:(id)a1;
- (double)frameRate;
- (void)setFrameRate:(double)a0;
- (id)attributeForKey:(id)a0;
- (double)endTime;
- (void)setEndTime:(double)a0;
- (void)setAttribute:(id)a0 forKey:(id)a1;
- (id)debugQuickLookObject;
- (id)scene;
- (float)playbackSpeed;
- (void)setPlaybackSpeed:(float)a0;
- (void)setRootNode:(id)a0;
- (void)_setRootNode:(id)a0;
- (id)_scenes;
- (void *)__CFObject;
- (void)_syncObjCModel;
- (void)addSceneAnimation:(id)a0 forKey:(id)a1 target:(id)a2;
- (id)initForJavascript:(id)a0;
- (id)initWithSceneRef:(struct __C3DScene { } *)a0;
- (struct __C3DScene { } *)sceneRef;
- (id)particleSystems;
- (BOOL)_allowsDefaultLightingEnvironmentFallback;
- (void)setSceneSource:(id)a0;
- (void)_clearSceneRef;
- (void)_customDecodingOfSCNScene:(id)a0;
- (void)_customEncodingOfSCNScene:(id)a0;
- (void)_didDecodeSCNScene:(id)a0;
- (void)_didEncodeSCNScene:(id)a0;
- (void)_dumpToDisk;
- (id)_exportAsMovieOperationWithDestinationURL:(id)a0 size:(struct CGSize { double x0; double x1; })a1 attributes:(id)a2 delegate:(id)a3 didEndSelector:(SEL)a4 userInfo:(void *)a5;
- (id)_nodeWithIndexPath:(id)a0;
- (id)_physicsWorldCreateIfNeeded:(BOOL)a0;
- (void)_prettifyForPreview;
- (void)_resetSceneTimeRange;
- (void)_scaleSceneBy:(double)a0;
- (void)_setSourceURL:(id)a0;
- (id)_subnodeFromIndexPath:(id)a0;
- (void)addParticleSystem:(id)a0 withTransform:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })a1;
- (id)copyAnimationChannelForKeyPath:(id)a0 animation:(id)a1;
- (id)copyAnimationChannelForKeyPath:(id)a0 property:(id)a1;
- (id)debugQuickLookObjectWithPointOfView:(id)a0;
- (id)exportAsCOLLADAOperationWithDestinationURL:(id)a0 attributes:(id)a1 delegate:(id)a2 didEndSelector:(SEL)a3 userInfo:(void *)a4;
- (id)exportAsMovieOperationWithDestinationURL:(id)a0 size:(struct CGSize { double x0; double x1; })a1 attributes:(id)a2 delegate:(id)a3 didEndSelector:(SEL)a4 userInfo:(void *)a5;
- (BOOL)isPausedForEditing;
- (BOOL)isPausedOrPausedByInheritance;
- (void)removeAllParticleSystems;
- (void)removeParticleSystem:(id)a0;
- (id)rootNodeForLayer:(int)a0;
- (id)sceneSource;
- (double)screenSpaceReflectionDepthThreshold;
- (void)setPausedForEditing:(BOOL)a0;
- (void)setRootNode:(id)a0 forLayer:(int)a1;
- (void)setScreenSpaceReflectionDepthThreshold:(double)a0;
- (void)setUpAxis:(struct SCNVector3 { double x0; double x1; double x2; })a0;
- (void)set_allowsDefaultLightingEnvironmentFallback:(BOOL)a0;
- (struct SCNVector3 { double x0; double x1; double x2; })upAxis;
- (BOOL)writeToURL:(id)a0 options:(id)a1;
- (BOOL)writeToURL:(id)a0 options:(id)a1 delegate:(id)a2 progressHandler:(id /* block */)a3;
- (BOOL)writeToURLWithUSDKit:(id)a0;

@end
