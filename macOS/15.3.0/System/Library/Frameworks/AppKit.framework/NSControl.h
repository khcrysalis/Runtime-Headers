@class NSFont, NSString, _NSControlModel, NSFormatter, NSAttributedString, _NSControlStorage, NSControlAuxiliary, NSDictionary, NSParagraphStyle;

@interface NSControl : NSView <_NSControlEventTrackable, _NSControlValueAccessing> {
    NSControlAuxiliary *_aux;
    id _cell;
    struct __conFlags { unsigned char enabled : 1; unsigned char ignoreMultiClick : 1; unsigned char calcSize : 1; unsigned char drawingAncestor : 1; unsigned char ibReserved : 1; unsigned char updateCellFocus : 1; unsigned char allowsLogicalLayoutDirection : 1; unsigned char asmlwidth : 1; unsigned char hsmlwidth : 1; unsigned char dontValidate : 1; unsigned char allowsLogicalLayoutDirectionExplicitlySet : 1; unsigned int reserved : 21; } _conFlags;
    _NSControlModel *_model;
    _NSControlStorage *_storage;
    NSParagraphStyle *_cachedParagraphStyle;
    NSDictionary *_textAttributes;
    unsigned char _wasEverZeroCell : 1;
    unsigned char _cellFallbackReason : 2;
    unsigned char _checkedMustDelegateToCell : 1;
    unsigned char _mustDelegateToCell : 1;
    unsigned char _checkedClassNeedsNoCellMouseTracking : 1;
    unsigned char _classNeedsNoCellMouseTracking : 1;
    unsigned char _inToolbarWithIconAndLabel : 1;
}

@property (class, readonly) Class _controlStorageClass;

@property (weak) id target;
@property SEL action;
@property long long tag;
@property BOOL ignoresMultiClick;
@property (getter=isContinuous) BOOL continuous;
@property (getter=isEnabled) BOOL enabled;
@property BOOL refusesFirstResponder;
@property (getter=isHighlighted) BOOL highlighted;
@property unsigned long long controlSize;
@property (retain) NSFormatter *formatter;
@property (copy) id objectValue;
@property (copy) NSString *stringValue;
@property (copy) NSAttributedString *attributedStringValue;
@property int intValue;
@property long long integerValue;
@property float floatValue;
@property double doubleValue;
@property (copy) NSFont *font;
@property BOOL usesSingleLineMode;
@property unsigned long long lineBreakMode;
@property long long alignment;
@property long long baseWritingDirection;
@property BOOL allowsExpansionToolTips;
@property (readonly) BOOL isEnabled;
@property (readonly) BOOL isContinuous;
@property (readonly) unsigned long long sendActionOnMask;
@property (setter=_setInSendAction:) BOOL _inSendAction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

+ (void)initialize;
+ (id)_cellStatistics;
+ (Class)_controlClassSupportingNoCell;
+ (BOOL)_controlClassSupportsNoCell;
+ (Class)_controlModelClass;
+ (Class)_defaultCellClass;
+ (BOOL)_prefersCellUserInterfaceLayoutDirection;
+ (BOOL)accessibilityIsSingleCelled;
+ (Class)cellClass;
+ (unsigned long long)defaultFocusRingType;
+ (void)setCellClass:(Class)a0;

- (void)dealloc;
- (void)didChangeValueForKey:(id)a0;
- (void)encodeWithCoder:(id)a0;
- (id)initWithCoder:(id)a0;
- (void)setRepresentedObject:(id)a0;
- (void)layout;
- (void)_didRemoveLayer;
- (void)_invalidateCachedParagraphStyle;
- (void)accessibilitySetFocus:(id)a0 forChild:(id)a1;
- (long long)backgroundStyle;
- (void)becomeKeyWindow;
- (void)drawCellInside:(id)a0;
- (void)setNeedsDisplay;
- (void)validateEditing;
- (BOOL)_controlStartTrackingAt:(struct CGPoint { double x0; double x1; })a0 inView:(id)a1;
- (BOOL)_hasExtra10_11BordersInToolbars;
- (void)resignKeyWindow;
- (void)rightMouseDown:(id)a0;
- (void)_addControlTargetAction:(id)a0;
- (id)_allTargetActions;
- (BOOL)_autoCancelIfTouchTooLong:(id *)a0;
- (void)_becomeCellBasedWithReason:(long long)a0;
- (BOOL)_canShowExpansionTooltips;
- (Class)_classToCheckForWantsUpdateLayer;
- (void)_clearMouseTrackingForCell:(id)a0;
- (void)_commonControlInit;
- (void)_commonEarlyInit;
- (BOOL)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)_continueBeginTouch:(id)a0;
- (BOOL)_continueTrackingFromPoint:(struct CGPoint { double x0; double x1; })a0 toPoint:(struct CGPoint { double x0; double x1; })a1;
- (void)_continueTrackingWithPeriodicEvent:(id)a0;
- (BOOL)_continueTrackingWithPressureEvent:(id)a0;
- (BOOL)_controlContinueTracking:(struct CGPoint { double x0; double x1; })a0 at:(struct CGPoint { double x0; double x1; })a1 inView:(id)a2;
- (void)_controlContinueTrackingPeriodically:(id)a0 inView:(id)a1;
- (BOOL)_controlContinueTrackingPressure:(id)a0 inView:(id)a1;
- (id)_controlModel;
- (void)_controlStopTracking:(struct CGPoint { double x0; double x1; })a0 at:(struct CGPoint { double x0; double x1; })a1 inView:(id)a2 mouseIsUp:(BOOL)a3;
- (void)_controlValueDidChange;
- (id)_currentForegroundColor;
- (id)_currentParagraphStyle;
- (id)_currentTextAttributes;
- (id)_fieldEditor;
- (void)_finishedMakingConnections;
- (BOOL)_hasEditableCell;
- (BOOL)_hasSetMaxLayoutWidth;
- (BOOL)_hitTestForTrackMouseEvent:(id)a0 inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a1 ofView:(id)a2;
- (BOOL)_inToolbar;
- (BOOL)_inToolbarWithIconAndLabel;
- (id)_insetMitigationTreatment;
- (void)_invalidateTextAttributes;
- (void)_invalidateTrackingAreas;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_opaqueRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_opaqueRectForWindowMoveWhenInTitlebar;
- (BOOL)_performKeyEquivalent:(id)a0 conditionally:(BOOL)a1;
- (long long)_preferredLayerContentsRedrawPolicy;
- (void)_removeAllCellMouseTracking;
- (void)_resetMaxLayoutWidthAtNextLayout;
- (void)_resetSupportsDirectLayerContentsCache;
- (id)_restingMitigationTreatment;
- (void)_rightMouseUpOrDown:(id)a0;
- (BOOL)_sendActionFrom:(id)a0;
- (void)_sendActionsForEvents:(unsigned long long)a0 view:(id)a1;
- (void)_setBackgroundStyleForSubtree:(long long)a0;
- (void)_setControlTextDelegateFromOld:(id)a0 toNew:(id)a1;
- (void)_setHasSetMaxLayoutWidth:(BOOL)a0;
- (void)_setInToolbarWithIconAndLabel:(BOOL)a0;
- (void)_setMouseTrackingForCell:(id)a0;
- (void)_setSetsMaxLayoutWidthAtFirstLayout:(BOOL)a0;
- (void)_setWindow:(id)a0;
- (BOOL)_setsMaxLayoutWidthAtFirstLayout;
- (BOOL)_shouldAutoflipUnarchivedProperties;
- (BOOL)_shouldDelegateTargetActionForSelector:(SEL)a0;
- (BOOL)_shouldSendActionForEventType:(unsigned long long)a0;
- (BOOL)_shouldShowFirstResponderForCell:(id)a0;
- (BOOL)_shouldTrackMouseWithEvent:(id)a0;
- (BOOL)_shouldUseCellUserInterfaceLayoutDirection;
- (BOOL)_startTrackingAt:(struct CGPoint { double x0; double x1; })a0;
- (void)_stopTrackingFromPoint:(struct CGPoint { double x0; double x1; })a0 endingAtPoint:(struct CGPoint { double x0; double x1; })a1;
- (id)_stringSearchParametersForListingViews;
- (void)_touchCancelled:(id)a0;
- (void)_touchEnded:(id)a0;
- (void)_transferStateToCell:(id)a0;
- (void)_updateCellImage:(id)a0;
- (void)_updateConstraintsForAlignmentRectChangeForCell:(id)a0;
- (void)_validateEditing:(id)a0;
- (int)_vibrancyBlendMode;
- (void)_windowChangedKeyState;
- (BOOL)abortEditing;
- (BOOL)acceptsFirstResponder;
- (id)accessibilityAttributeNames;
- (id)accessibilityChildrenAttribute;
- (void)accessibilityDrawFocusRing;
- (id)accessibilityEnabledAttribute;
- (id)accessibilityFocusedUIElement;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })accessibilityFrame;
- (id)accessibilityHelpStringForChild:(id)a0;
- (id)accessibilityHitTest:(struct CGPoint { double x0; double x1; })a0;
- (BOOL)accessibilityIsChildFocusable:(id)a0;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityPopUpMenuParent:(id)a0;
- (id)accessibilityPositionOfChild:(id)a0;
- (void)accessibilityPostNotification:(id)a0 context:(id)a1;
- (id)accessibilityRoleAttribute;
- (id)accessibilitySizeOfChild:(id)a0;
- (void)addTarget:(id)a0 action:(SEL)a1 forControlEvents:(unsigned long long)a2;
- (BOOL)allowsLogicalLayoutDirection;
- (BOOL)allowsVibrancy;
- (BOOL)becomeFirstResponder;
- (void)calcSize;
- (id)cell;
- (id)cellIfExists;
- (id)currentEditor;
- (void)drawCell:(id)a0;
- (void)drawFocusRingMask;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)drawWithExpansionFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 inView:(id)a1;
- (void)editWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 editor:(id)a1 delegate:(id)a2 event:(id)a3;
- (void)endEditing:(id)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })expansionFrameWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (double)firstBaselineOffsetFromTop;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })focusRingMaskBounds;
- (unsigned long long)focusRingType;
- (void)getPeriodicDelay:(float *)a0 interval:(float *)a1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (struct CGSize { double x0; double x1; })intrinsicContentSize;
- (void)invalidateIntrinsicContentSizeForCell:(id)a0;
- (BOOL)isOpaque;
- (void)keyDown:(id)a0;
- (void)keyUp:(id)a0;
- (id)menuForEvent:(id)a0;
- (void)mouseDown:(id)a0;
- (BOOL)mouseDownCanMoveWindow;
- (long long)mouseDownFlags;
- (BOOL)needsPanelToBecomeKey;
- (void)performClick:(id)a0;
- (void)removeTarget:(id)a0 action:(SEL)a1 forControlEvents:(unsigned long long)a2;
- (id)representedObject;
- (void)resetCursorRects;
- (BOOL)resignFirstResponder;
- (void)selectCell:(id)a0;
- (void)selectWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 editor:(id)a1 delegate:(id)a2 start:(long long)a3 length:(long long)a4;
- (id)selectedCell;
- (long long)selectedTag;
- (BOOL)sendAction:(SEL)a0 to:(id)a1;
- (long long)sendActionOn:(unsigned long long)a0;
- (void)setAllowsLogicalLayoutDirection:(BOOL)a0;
- (void)setCell:(id)a0;
- (void)setFloatingPointFormat:(BOOL)a0 left:(unsigned long long)a1 right:(unsigned long long)a2;
- (void)setFocusRingType:(unsigned long long)a0;
- (void)setNextState;
- (void)setSkipEditValidation:(BOOL)a0;
- (void)setTouchBarInsetMitigation:(long long)a0;
- (void)setTouchBarRestingMitigation:(long long)a0;
- (void)setUserInterfaceLayoutDirection:(long long)a0;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })a0;
- (void)sizeToFit;
- (BOOL)skipEditValidation;
- (void)takeDoubleValueFrom:(id)a0;
- (void)takeFloatValueFrom:(id)a0;
- (void)takeIntValueFrom:(id)a0;
- (void)takeIntegerValueFrom:(id)a0;
- (void)takeObjectValueFrom:(id)a0;
- (void)takeStringValueFrom:(id)a0;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })textView:(id)a0 willChangeSelectionFromCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a1 toCharacterRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })a2;
- (void)textViewDidChangeSelection:(id)a0;
- (long long)touchBarInsetMitigation;
- (long long)touchBarRestingMitigation;
- (void)touchesBeganWithEvent:(id)a0;
- (void)touchesCancelledWithEvent:(id)a0;
- (void)touchesEndedWithEvent:(id)a0;
- (void)touchesMovedWithEvent:(id)a0;
- (void)updateCell:(id)a0;
- (void)updateCellInside:(id)a0;
- (void)updateLayer;
- (void)updateTrackingAreas;
- (long long)userInterfaceLayoutDirection;
- (void)viewDidChangeEffectiveAppearance;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (id)viewWithTag:(long long)a0;
- (BOOL)wantsUpdateLayer;

@end
