@class NSScrollView, NSString, NSView, PXNSScrollView, NSPanGestureRecognizer;
@protocol PXNSScrollViewControllerAccessibilityDelegate;

@interface PXNSScrollViewController : PXScrollViewController <PXNSScrollViewDelegate, NSScrollViewDelegate> {
    PXNSScrollView *_scrollView;
    BOOL _isScrolling;
    BOOL _isTracking;
    BOOL _isLiveScrolling;
    BOOL _isScrubbing;
    BOOL _isDecelerating;
    struct CGPoint { double x; double y; } _targetContentOffset;
    struct CGPoint { double x; double y; } _initialDragPoint;
    NSView *_horizontalFloatingWrapperView;
    NSView *_verticalFloatingWrapperView;
}

@property (retain, nonatomic) NSPanGestureRecognizer *panGestureRecognizer;
@property (nonatomic) BOOL layoutOnBoundsChanges;
@property (readonly, nonatomic) NSScrollView *scrollView;
@property (weak, nonatomic) id<PXNSScrollViewControllerAccessibilityDelegate> accessibilityDelegate;
@property (nonatomic) BOOL scrollViewIsAccessibilityElement;
@property (setter=_setWantsPageAlignedHorizontalAxis:) BOOL _wantsPageAlignedHorizontalAxis;
@property (setter=_setWantsPageAlignedVerticalAxis:) BOOL _wantsPageAlignedVerticalAxis;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

- (void).cxx_destruct;
- (void)addSubview:(id)a0;
- (BOOL)clipsToBounds;
- (void)didBeginScrollInScrollView:(id)a0;
- (void)didEndScrollInScrollView:(id)a0;
- (void)didScrollInScrollView:(id)a0;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (BOOL)isDragging;
- (BOOL)isTracking;
- (void)scrollViewBeganMomentum:(id)a0 withVelocity:(struct CGPoint { double x0; double x1; })a1 targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)a2;
- (void)setClipsToBounds:(BOOL)a0;
- (void)setContentInset:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a0;
- (BOOL)isScrubbing;
- (void)scrollViewDidScroll:(id)a0;
- (void)_handlePanGesture:(id)a0;
- (BOOL)isDecelerating;
- (void)setAlwaysBounceHorizontal:(BOOL)a0;
- (void)setAlwaysBounceVertical:(BOOL)a0;
- (void)setShowsHorizontalScrollIndicator:(BOOL)a0;
- (void)setShowsVerticalScrollIndicator:(BOOL)a0;
- (BOOL)showsHorizontalScrollIndicator;
- (BOOL)showsVerticalScrollIndicator;
- (id)contentCoordinateSpace;
- (void)addFloatingSublayer:(id)a0 forAxis:(long long)a1;
- (BOOL)deferContentOffsetUpdates;
- (BOOL)isFloatingSublayer:(id)a0;
- (BOOL)isScrolledAtEdge:(unsigned int)a0 tolerance:(double)a1;
- (BOOL)respectsContentZOrder;
- (void)scrollRectToVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0 avoidingContentInsetEdges:(unsigned long long)a1 animated:(BOOL)a2;
- (void)scrollToEdge:(unsigned int)a0 padding:(struct NSEdgeInsets { double x0; double x1; double x2; double x3; })a1 animated:(BOOL)a2 completionHandler:(id /* block */)a3;
- (struct CGSize { double x0; double x1; })scrollViewContentSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollViewVisibleRect;
- (void)setDeferContentOffsetUpdates:(BOOL)a0;
- (void)setRespectsContentZOrder:(BOOL)a0;
- (void)setVisibleOrigin:(struct CGPoint { double x0; double x1; })a0;
- (void)stopScrollingAndZoomingAnimations;
- (void)draggingPerformsScrollDidChange;
- (void)_setupDraggingGestureIfNeeded;
- (void)_updateIsScrubbing;
- (void)addSubviewToScrollView:(id)a0;
- (void)applyScrollInfo:(id)a0;
- (void)contentInsetAdjustmentBehaviorDidChange;
- (void)decelerationRateDidChange;
- (BOOL)hasWindow;
- (BOOL)isSubview:(id)a0;
- (void)postContentRootAccessibilityNotification:(id)a0;
- (void)postContentRootAccessibilityNotification:(id)a0 userInfo:(id)a1;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollIndicatorFrameForAxis:(long long)a0;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollViewActiveRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollViewConstrainedVisibleRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollViewContentBounds;
- (void)scrollViewDidEndLiveScroll:(id)a0;
- (void)scrollViewDidLayout:(id)a0;
- (BOOL)scrollViewIsAnimatingScroll;
- (void)scrollViewLayoutIfNeeded;
- (struct CGSize { double x0; double x1; })scrollViewReferenceSize;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollViewTargetRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })scrollViewVisibleRectOutsideBounds;
- (void)scrollViewWillStartLiveScroll:(id)a0;
- (void)setScrollViewContentBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })a0;
- (void)setScrollViewNeedsLayout;
- (void)setShouldScrollSimultaneouslyWithDescendantScrollView:(BOOL)a0;
- (BOOL)shouldScrollSimultaneouslyWithDescendantScrollView;

@end
