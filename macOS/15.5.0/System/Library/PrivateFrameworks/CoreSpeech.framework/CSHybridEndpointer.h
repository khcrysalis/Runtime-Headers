@class NSDate, OSDFeatures, NSString, CSAudioRecordContext, CSEnhancedEndpointer, CSASRFeatures, _EAREndpointer, NSMutableArray, CSAsset, NSObject, NSDictionary;
@protocol OS_dispatch_queue, CSEndpointAnalyzerDelegate, CSEndpointAnalyzerImplDelegate;

@interface CSHybridEndpointer : NSObject <CSEndpointerAssetManagerDelegate, CSEndpointAnalyzerImpl>

@property (retain, nonatomic) CSAsset *currentAsset;
@property (retain, nonatomic) OSDFeatures *osdFeaturesAtEndpoint;
@property (nonatomic) BOOL canProcessCurrentRequest;
@property (retain, nonatomic) _EAREndpointer *hybridClassifier;
@property (retain, nonatomic) NSString *endpointerModelVersion;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *asrFeaturesQueue;
@property (retain, nonatomic) CSASRFeatures *lastKnownASRFeatures;
@property (retain, nonatomic) OSDFeatures *lastKnownOSDFeatures;
@property (retain, nonatomic) CSASRFeatures *lastKnownRCFeatures;
@property (retain, nonatomic) NSMutableArray *asrFeaturesLatencies;
@property (nonatomic) double lastKnownASRFeatureLatency;
@property (nonatomic) double lastKnownRCFeatureLatency;
@property (nonatomic) BOOL epResult;
@property (nonatomic) double asrFeaturesWarmupLatency;
@property (retain, nonatomic) NSDate *lastASRFeatureTimestamp;
@property (nonatomic) BOOL didReceiveASRFeatures;
@property (nonatomic) double clientLagThresholdMs;
@property (nonatomic) double clampedASRFeatureLatencyMsForClientLag;
@property (nonatomic) BOOL useDefaultASRFeaturesOnClientLag;
@property (nonatomic) unsigned long long extraDelayFrequency;
@property (retain, nonatomic) NSDictionary *taskThresholdMap;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *hybridClassifierQueue;
@property (nonatomic) double lastReportedEndpointTimeMs;
@property (nonatomic) double processedAudioInSeconds;
@property (nonatomic) float lastEndpointPosterior;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *stateSerialQueue;
@property (nonatomic) BOOL didCommunicateEndpoint;
@property (nonatomic) unsigned long long currentRequestSampleRate;
@property (nonatomic) double vtExtraAudioAtStartInMs;
@property (nonatomic) unsigned long long vtEndInSampleCount;
@property (nonatomic) double hepAudioOriginInMs;
@property (nonatomic) double twoShotSilenceThresholdInMs;
@property (nonatomic) BOOL didNotifyTwoShot;
@property (retain, nonatomic) CSAudioRecordContext *recordContext;
@property (nonatomic) BOOL speechEndpointDetected;
@property (retain, nonatomic) NSDate *firstAudioPacketTimestamp;
@property (nonatomic) double firstAudioSampleSensorTimestamp;
@property (nonatomic) BOOL didTimestampFirstAudioPacket;
@property (nonatomic) unsigned long long numSamplesProcessedBeforeAnchorTime;
@property (nonatomic) unsigned long long anchorMachAbsTime;
@property (nonatomic) BOOL isAnchorTimeBuffered;
@property (nonatomic) BOOL isRequestTimeout;
@property (nonatomic) unsigned long long audioDeliveryHostTimeDelta;
@property (nonatomic) BOOL isASRFeatureFromServer;
@property (nonatomic) BOOL recordingDidStop;
@property (nonatomic) BOOL didDetectSpeech;
@property (nonatomic) double postVoiceTriggerSilence;
@property (nonatomic) long long endpointerOperationMode;
@property (retain, nonatomic) CSEnhancedEndpointer *enhancedEndpointer;
@property (retain, nonatomic) NSDictionary *taskEnhancedEndpointerMap;
@property (nonatomic) BOOL enhancedEndpointerDefaultResult;
@property (nonatomic) BOOL didReceiveRCFeatures;
@property (retain, nonatomic) NSDictionary *enhancedEndpointerTaskThresholdMap;
@property (nonatomic) BOOL hasAcceptedEagerResult;
@property (nonatomic) BOOL disableRCSelection;
@property (retain, nonatomic) NSString *currentTaskString;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) id<CSEndpointAnalyzerDelegate> delegate;
@property (weak, nonatomic) id<CSEndpointAnalyzerImplDelegate> implDelegate;
@property (nonatomic) unsigned long long activeChannel;
@property (nonatomic) long long endpointStyle;
@property (nonatomic) double delay;
@property (nonatomic) double startWaitTime;
@property (nonatomic) double automaticEndpointingSuspensionEndTime;
@property (nonatomic) double minimumDurationForEndpointer;
@property (readonly, nonatomic) double lastEndOfVoiceActivityTime;
@property (readonly, nonatomic) double lastStartOfVoiceActivityTime;
@property (nonatomic) double bypassSamples;
@property (nonatomic) double interspeechWaitTime;
@property (nonatomic) double endWaitTime;
@property (nonatomic) BOOL saveSamplesSeenInReset;
@property (retain, nonatomic) NSString *mhId;

- (id)init;
- (void).cxx_destruct;
- (void)reset;
- (void)preheat;
- (void)updateEndpointerDelayedTrigger:(BOOL)a0;
- (void)_generateEndpointerFeaturesWithEffectiveClientProcessedAudioMs:(double)a0 osdFeatures:(id)a1 completion:(id /* block */)a2;
- (id)_getCSHybridEndpointerConfigForAsset:(id)a0;
- (id)_getSerialQueueWithName:(id)a0 targetQueue:(id)a1;
- (BOOL)_isTaskStringAccessible:(id)a0;
- (BOOL)_multimodalEndpointerEnabled;
- (void)_processEnhancedEndpointerTaskString:(id)a0;
- (void)_readParametersFromHEPAsset:(id)a0;
- (void)_shouldAcceptEagerResultForDuration:(double)a0 asrFeatures:(id)a1 lastReportedEndpointTimeMs:(double)a2 osdFeatures:(id)a3 resultsCompletionHandler:(id /* block */)a4;
- (BOOL)_shouldProvideTwoShotFeedbackWithRecordContext;
- (void)_swapEnhancedEndpointerModelForTaskString:(id)a0;
- (void)_updateCurrentAsset:(id)a0;
- (void)_updateEndpointerDelayedTriggerByMhId:(id)a0;
- (BOOL)_useEnhancedEndpointer;
- (void)endpointerAssetManagerDidUpdateAsset:(id)a0;
- (void)endpointerAssetManagerDidUpdateOSDAsset:(id)a0;
- (long long)fetchCurrentEndpointerOperationMode;
- (void)handleVoiceTriggerWithActivationInfo:(id)a0;
- (void)logAnchorMachAbsTime:(unsigned long long)a0 numSamplesProcessedBeforeAnchorTime:(unsigned long long)a1 isAnchorTimeBuffered:(BOOL)a2 audioDeliveryHostTimeDelta:(unsigned long long)a3;
- (void)logFeaturesWithEvent:(id)a0 locale:(id)a1;
- (void)processASRFeatures:(id)a0 fromServer:(BOOL)a1;
- (void)processAudioSamplesAsynchronously:(id)a0;
- (void)processFirstAudioPacketTimestamp:(id)a0 firstAudioSampleSensorTimestamp:(unsigned long long)a1;
- (void)processOSDFeatures:(id)a0 withFrameDurationMs:(double)a1 withMHID:(id)a2;
- (void)processRCFeatures:(id)a0;
- (void)processTaskString:(id)a0;
- (void)recordingStoppedForReason:(long long)a0;
- (void)resetForNewRequestWithSampleRate:(unsigned long long)a0 recordContext:(id)a1 disableRCSelection:(BOOL)a2;
- (void)shouldAcceptEagerResultForDuration:(double)a0 resultsCompletionHandler:(id /* block */)a1;
- (void)shouldAcceptEagerResultForDuration:(double)a0 withEndpointerMetrics:(id)a1 resultsCompletionHandler:(id /* block */)a2;
- (BOOL)shouldAcceptEagerResultForDurationSync:(double)a0 withEndpointerMetrics:(id)a1;
- (void)stopEndpointer;
- (void)terminateProcessing;
- (void)updateEndpointerThreshold:(float)a0;
- (void)updateEnhancedEndpointerDefaultThresholdPartial:(float)a0 defaultThresholdRC:(float)a1 relaxedThresholdPartial:(float)a2 relaxedThresholdRC:(float)a3;

@end
